{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t * \n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * @ignore\n\t */\n\totherCharts?: Array<XYChart>\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tthis.handleWheel(event);\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: event.clientX, y: event.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif(chart && $object.keys(chart.plotContainer._downPoints).length > 1){\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\nthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n\n\n\t/**\n\t * @todo review\n\t * read only, saves position to which tooltip points\n\t */\n\ttooltipPosition?:number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync:boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured:false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\t\t\t\t\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\t\t\t\t\tlet endIndex = end.index;\n\n\t\t\t\t\tlet endIndex2 = endIndex;\n\t\t\t\t\tif (endIndex2 > 0) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstartTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\t\tendTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), this._root.timezone).getTime();\n\t\t\tlet endValue = value;\n\t\t\tif (location > 0) {\n\t\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t}\n\t\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet date = new Date(this.positionToValue(position));\n\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position) + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet firstDate = new Date();\r\n\t\t\tif(this._dates[0]){\r\n\t\t\t\tfirstDate = new Date(this._dates[0]);\r\n\t\t\t}\r\n\r\n\t\t\tlet startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n\t\t\tlet value = $time.add(startDate, gridInterval.timeUnit, -1, this._root.utc).getTime();\r\n\t\t\t\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\r\n\r\n\r\n\t\t\t\tif(realValue < value){\r\n\t\t\t\t\tfor(let i = index, len = this._dates.length; i < len; i++){\r\n\t\t\t\t\t\tlet realValue = this._dates[i];\r\n\t\t\t\t\t\tif(realValue >= value){\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _saveMinMax(_min:number, _max:number){\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker();\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\tthis._sindex++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","series","xAxis","yAxis","cursor","snapToSeries","_removeSeries","wheelX","wheelY","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","getPrivate","delta","_getWheelSign","se","_fixWheel","_wheelDp","handleWheel","dispose","sign","diff","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","_movePoints","_handlePinch","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","sa","ea","downStartY","downEndY","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","plotT","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","pinchZoomX","pinchZoomY","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","once","_markDirtyKey","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","axisRange","_seriesAxisRanges","_updateCursor","_start","_end","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","hideDataItem","showDataItem","tick","bullet","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updateChartLayout","_updatePositions","labels","ticks","axisFills","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","_clearDirty","_sizeDirty","coordinate","_nextItem","_autoGapCount","_fieldName","axisDataItem","Axis","AxisLabel","AxisLabelRadial","template","make","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_tooltip","markDirty","_clear","AxisRenderer","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToCoordinate","endPosition","toggleVisibility","x0","x1","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","y0","y1","AxisRendererY","AxisTick","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","_dataGrouped","_groupSeriesData","_handleRangeChange","setDataSet","markDirtyExtremes","_seriesDataGrouped","_dataSets","baseAxis","_valueYFields","_valueXFields","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","_intervalMax","_intervalMin","selectionMin","selectionMax","modifiedDifference","baseDuration","getGroupInterval","current","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","gridCount","_strictMode","_intervalDuration","id","intervals","gridInterval","nextGridUnit","previousValue","format","formats","_dataItems","processDataItem","date","dateFormatter","j","inited","_markDirtyAxes","_updateGhost","startTime","_date","fields","open","close","endTime","_updateDates","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemPositionX","getDataItemPositionY","positionToValue","NaN","fieldName","result","diValue","first","second","nextItem","value1","zoomToValues","DateAxis","valueFields","dates","_dates","found","len","itemValue","findex","floor","_seriesValuesDirty","_updateAllDates","valueToIndex","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","_frequency","realDuration","startDate","previousPosition","minDifference","realValue","GaplessDateAxis","isPrivateDirty","Grid","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_valuesDirty","_getMinMax","_getSelectionMinMax","_groupData","_prepareAxisItems","_updateAxisRanges","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","_formatText","stepPower","decCount","fillEndPosition","updateGrid","hasTag","updateTick","updateFill","updateBullet","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","fixSmallStep","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strictMinMaxSelection","strict","_saveMinMax","animatePrivate","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","_makeGraphics","legendDataItem","markerRectangle","stroke","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","setting","_getTooltipTarget","_draw","Candlestick","mainContainer","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","getRaw","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","CandlestickSeries","ColumnSeries","strokes","fills","_fillGenerator","p","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","marker","interactive","disabledColor","bulletFunction","LineSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","getStackedYValue","processSeriesDataItem","_markStakedDirtyStack","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","markDirtySelectionExtremes","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_mainContainerMask","mask","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","stackedToSeries","_afterDataChange","_aggregatesCalculated","_shouldShowBullet","_positionX","_positionY","_markDataSetDirty","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","_position","resetExtremes","XYSeries","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","_itemMap","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","axisPositionToIndex","seriesDataItem","zoomToIndexes","previousIndex","previousUnitValue","selectedItems","changed","skip","unitValue","added","pop","shouldAdd","item","classNames","concat","CategoryDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","lY","hX","OHLC","List","Template","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}